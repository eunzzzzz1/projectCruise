<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cruise.project_cruise.mapper.CrewDetailMapper">
<!-- red 상세페이지 접속 관련 -->
    <!-- 해당 유저가 해당 크루의 회원인지 확인하는 쿼리 -->
    <select id="isMember" parameterType="map" resultType="int">
        select nvl(count(*),0)
        from CREW_MEMBER
        where CREW_NUM = #{crewNum} and CMEM_EMAIL = #{userEmail}
    </select>

    <!-- 해당 유저가 해당 크루의 선장인지 확인하는 쿼리 -->
    <select id="isCaptain" parameterType="map" resultType="int">
        select nvl(count(*),0)
        from CREW_MEMBER
        where CREW_NUM = #{crewNum} and CMEM_EMAIL = #{userEmail} and CAPTAIN_YN = 'Y'
    </select>

    <!-- 해당 유저의 계좌리스트 들고오기 (크루 대표통장이 아닌 것만) -->
    <select id="getUserAccountList" parameterType="java.lang.String" resultType="com.cruise.project_cruise.dto.MyAccountDTO">
        select myaccount_anum,myaccount_bank,myaccount_name from my_account
        where email=#{userEmail} and
            myaccount_anum not in
            (select CREW_ACCOUNTID from CREW)
        order by MYACCOUNT_DATE
    </select>


<!-- red 크루 정보 -->
    <!-- 특정 크루 데이터를 select 하는 쿼리 -->
    <select id="getCrewData" parameterType="int" resultType="com.cruise.project_cruise.dto.CrewDTO">
        select
        CREW_NUM, CREW_NAME, CREW_INFO, CAPTAIN_EMAIL, CREW_CREATED,
        CREW_BANK, CREW_ACCOUNTID, CREW_PAYDATE, CREW_PAYMONEY, CREW_GOAL,
        TO_CHAR(CREW_DELDATE, 'yyyy-MM-dd HH24:mi:ss') AS CREW_DELDATE
        from CREW
        where CREW_NUM=#{crewNum}
    </select>

    <!-- 선장이름을 가지고오는 쿼리 -->
    <select id="getCaptainName" parameterType="java.lang.String" resultType="java.lang.String">
        select USER_NAME from USERS where EMAIL=#{captain_Email}
    </select>

    <!-- 오픈뱅킹 테이블에서 계좌잔액 가지고오기 -->
    <select id="getAccountBalance" parameterType="java.lang.String" resultType="int">
        select OPEN_BALANCE from OPENBANK
        where OPEN_ACCOUNT=#{crewAccount}
    </select>

<!-- red 크루 사용자 -->

    <!-- 해당 크루에 접속한 선원의 정보 가지고오기 -->
    <select id="getCrewUserInfo" parameterType="map" resultType="java.util.Map">
        SELECT
            A.CMEM_NUM AS MEM_NUM,
            A.CREW_NUM AS CREW_NUM,
            B.USER_NAME AS USER_NAME,
            A.CMEM_EMAIL AS USER_EMAIL,
            A.CAPTAIN_YN AS CAPTAIN_YN,
            A.JOIN_DATE AS JOIN_DATE,
            A.TOTAL_PAY AS TOTAL_PAY,
            A.MUST_PAYCOUNT AS MUST_PAYCOUNT,
            A.REAL_PAYCOUNT AS REAL_PAYCOUNT
        FROM
            (SELECT CMEM_NUM, CMEM_EMAIL, CREW_NUM, CAPTAIN_YN, JOIN_DATE, TOTAL_PAY, MUST_PAYCOUNT, REAL_PAYCOUNT
             FROM CREW_MEMBER where CREW_NUM = #{crewNum} and CMEM_EMAIL = #{userEmail}) A
                JOIN
            (SELECT USER_NAME, EMAIL
             FROM USERS) B
            ON A.CMEM_EMAIL = B.EMAIL
        ORDER BY A.JOIN_DATE
    </select>


    <!--  크루 탈퇴 시 crewMember 테이블에서 해당 선원을 삭제  -->
    <delete id="deleteCrewMember" parameterType="hashMap">
        delete crew_member where cmem_email=#{cmemEmail} and crew_num=#{crewNum}
    </delete>

    <!-- 크루 회비 납입 시 실제 납입횟수, totalPay 업데이트 하기 -->
    <update id="updateCrewMemberPayment" parameterType="map">
        update CREW_MEMBER
        set
            TOTAL_PAY=TOTAL_PAY+#{payment},
            REAL_PAYCOUNT=REAL_PAYCOUNT + #{payCount}
        where CREW_NUM=#{crewNum} and CMEM_EMAIL=#{userEmail}
    </update>

    <!-- 납입일이 되면 의무 납입횟수에 +1 하는 쿼리 -->
    <update id="updateCrewMustPayCount" parameterType="int">
        update CREW_MEMBER
        set
            MUST_PAYCOUNT = MUST_PAYCOUNT + 1
        where CREW_NUM = #{crewNum}
    </update>
</mapper>