<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cruise.project_cruise.mapper.CrewSettingMapper">
<!-- red 크루 관리 -->

<!-- green 크루 정보수정하기 -->
    <!-- 크루원 정보 뽑아오기 -->
    <select id="getUser" parameterType="java.lang.String" resultType="com.cruise.project_cruise.dto.UserDTO">
        select EMAIL, EMAIL_VERIFIED, USER_PASSWORD, USER_NAME, PROVIDER, PROVIDER_ID, TEL, PAY_PASSWORD, ADDRESS1, ADDRESS2, REFRESHTOKEN
        from USERS
        where EMAIL = #{email}
    </select>

    <!-- 크루 정보 수정 Submit -->
    <update id="updateCrewInfo" parameterType="com.cruise.project_cruise.dto.CrewDTO">
        update CREW
        set
            CREW_INFO=#{crew_info},
            CREW_PAYDATE=#{crew_paydate},
            CREW_PAYMONEY=#{crew_paymoney},
            CREW_GOAL=#{crew_goal}
        where CREW_NUM=#{crew_num}
    </update>

<!-- green 항해 중단하기 -->
    <!-- 유예일 추가하기 -->
    <update id="updateCrewDelDate" parameterType="int">
        update CREW
        set
            CREW_DELDATE = sysdate
        where CREW_NUM = #{crewNum}
    </update>

    <!-- 항해 중단 취소하기 -->
    <update id="cancelCrewDelDate" parameterType="int">
        update CREW
        set
            CREW_DELDATE = null
        where CREW_NUM = #{crewNum}
    </update>

    <!-- 크루 삭제하기 -->
    <delete id="deleteCrew" parameterType="int">
        delete CREW where CREW_NUM = #{crewNum}
    </delete>




<!-- green 크루 일정 관리 -->
    <!--    해당 크루의 스케줄을 불러오는 쿼리 -->
    <select id="getCrewScheList" parameterType="int" resultType="com.cruise.project_cruise.dto.ScheduleDTO">
        select CREW_NUM, SCHE_NUM, SCHE_TITLE, SCHE_ASSORT,
               TO_CHAR(SCHE_START,'YYYY-MM-DD HH24:MI:SS') AS SCHE_START,
               TO_CHAR(SCHE_END,'YYYY-MM-DD HH24:MI:SS') AS SCHE_END,
               SCHE_ALLDAYTF
        from SCHEDULE
        where CREW_NUM = #{crew_num}
    </select>

    <!-- 스케줄의 maxNum 들고오기 -->
    <select id="getScheMaxNum" resultType="int">
        select nvl(max(SCHE_NUM),0) from SCHEDULE
    </select>

    <!-- 스케줄 추가하기 -->
    <insert id="insertCrewSche" parameterType="com.cruise.project_cruise.dto.ScheduleDTO">
        insert into SCHEDULE
        (crew_num, sche_num, sche_title, sche_assort, sche_start, sche_end, sche_alldaytf)
        values
            (#{crew_num}, #{sche_num}, #{sche_title}, #{sche_assort},
             TO_DATE(#{sche_start},'YYYY-MM-DD HH24:MI:SS'),
             TO_DATE(#{sche_end},'YYYY-MM-DD HH24:MI:SS'),
             #{sche_alldayTF})
    </insert>

    <!-- 스케줄 수정하기 -->
    <update id="updateCrewSche" parameterType="com.cruise.project_cruise.dto.ScheduleDTO">
        update SCHEDULE
        set
            SCHE_TITLE=#{sche_title},
            SCHE_ASSORT=#{sche_assort},
            SCHE_START=TO_DATE(#{sche_start},'YYYY-MM-DD HH24:MI:SS'),
            SCHE_END=TO_DATE(#{sche_end},'YYYY-MM-DD HH24:MI:SS'),
            SCHE_ALLDAYTF=#{sche_alldayTF}
        where SCHE_NUM=#{sche_num}
    </update>

    <!-- 스케줄 삭제하기 -->
    <update id="deleteCrewSche" parameterType="int">
        delete SCHEDULE where SCHE_NUM=#{sche_num}
    </update>



<!-- red 선원 관리 -->

<!-- green 선원 관리하기 -->
    <!-- 선원 정보 목록 뽑아오기 -->
    <select id="getCrewMemberList" parameterType="int" resultType="java.util.Map">
        SELECT
            A.CMEM_NUM AS MEM_NUM,
            A.CREW_NUM AS CREW_NUM,
            B.USER_NAME AS MEM_NAME,
            A.CMEM_EMAIL AS MEM_EMAIL,
            A.CAPTAIN_YN AS CAPTAIN_YN,
            A.JOIN_DATE AS JOIN_DATE,
            A.TOTAL_PAY AS TOTAL_PAY,
            A.MUST_PAYCOUNT AS MUST_PAYCOUNT,
            A.REAL_PAYCOUNT AS REAL_PAYCOUNT
        FROM
            (SELECT CMEM_NUM, CMEM_EMAIL, CREW_NUM, CAPTAIN_YN, JOIN_DATE, TOTAL_PAY, MUST_PAYCOUNT, REAL_PAYCOUNT
             FROM CREW_MEMBER where CREW_NUM = #{crew_num}) A
                JOIN
            (SELECT USER_NAME, EMAIL
             FROM USERS) B
            ON A.CMEM_EMAIL = B.EMAIL
        ORDER BY A.CAPTAIN_YN DESC, A.JOIN_DATE
    </select>

    <!-- 선원 삭제하기 -->
    <delete id="deleteMember" parameterType="map">
        delete CREW_MEMBER where CMEM_EMAIL=#{email} and CREW_NUM = #{crew_num}
    </delete>

<!-- green 잔액 1/N하기 -->
    <!-- 크루 선원들의 납입횟수의 합을 구하기 -->
    <select id="getMemberPayCountSum" parameterType="int" resultType="int">
        select nvl(sum(REAL_PAYCOUNT),0) from CREW_MEMBER where CREW_NUM = #{crewNum}
    </select>





</mapper>